sig java_lang_LongArray extends java_lang_Object {}
{}




pred java_lang_LongArrayCondition4[
  index:univ,
  java_lang_LongArray_length:univ->univ,
  thiz:univ
]{
   not (
     pred_java_primitive_integer_value_lt_zero[index]
     or 
     pred_java_primitive_integer_value_gte[index,
                                          thiz.java_lang_LongArray_length]
   )

}

pred java_lang_LongArrayCondition2[
  index:univ,
  java_lang_LongArray_contents:univ->univ->univ,
  thiz:univ
]{
   not (
     pred_in[index,
            (thiz.java_lang_LongArray_contents).univ]
   )

}

pred java_lang_LongArrayCondition0[
  return:univ
]{
   pred_java_primitive_long_value_eq_zero[return]

}

pred java_lang_LongArrayCondition1[
  index:univ,
  java_lang_LongArray_contents:univ->univ->univ,
  thiz:univ
]{
   pred_in[index,
          (thiz.java_lang_LongArray_contents).univ]

}

pred java_lang_LongArrayCondition3[
  index:univ,
  java_lang_LongArray_length:univ->univ,
  thiz:univ
]{
   pred_java_primitive_integer_value_lt_zero[index]
   or 
   pred_java_primitive_integer_value_gte[index,
                                        thiz.java_lang_LongArray_length]

}

program java_lang_LongArray_long_array_read[
  thiz:java_lang_LongArray,
  throw:java_lang_Throwable+null,
  return:JavaPrimitiveLongValue,
  index:JavaPrimitiveIntegerValue,
  java_lang_LongArray_contents:java_lang_LongArray -> (JavaPrimitiveIntegerValue set -> lone JavaPrimitiveLongValue),
  forArielGodio_fibonacci_bug01_Fibonacci_fib:(forArielGodio_fibonacci_bug01_Fibonacci)->one(java_lang_LongArray+null),
  java_lang_Boolean_FALSE:(ClassFields)->one(java_lang_Boolean),
  java_lang_Boolean_TRUE:(ClassFields)->one(java_lang_Boolean),
  markerFieldToForceAddingInts:JavaPrimitiveIntegerValue,
  java_lang_System_out:(ClassFields)->(java_io_PrintStream),
  java_lang_LongArray_length:(java_lang_LongArray)->one(JavaPrimitiveIntegerValue),
  booleanValue:(java_lang_Boolean)->one(boolean),
  usedObjects:set (java_lang_Object)
] var [

]{
   throw:=null;
   if java_lang_LongArrayCondition3[index,java_lang_LongArray_length,thiz] lblpos if_1 {
      throw:=java_lang_IndexOutOfBoundsExceptionLit
   
   } else {
      if java_lang_LongArrayCondition1[index,java_lang_LongArray_contents,thiz] lblpos if_1 {
         return:=index.(thiz.java_lang_LongArray_contents)
      
      } else {
         havocVariable[return];
         assume java_lang_LongArrayCondition0[return]
      
      }
   
   }
   ;
   skip

}

program java_lang_LongArray_long_array_write[
  thiz:java_lang_LongArray,
  throw:java_lang_Throwable+null,
  new_value:JavaPrimitiveLongValue,
  index:JavaPrimitiveIntegerValue,
  java_lang_LongArray_contents:java_lang_LongArray -> (JavaPrimitiveIntegerValue set -> lone JavaPrimitiveLongValue),
  forArielGodio_fibonacci_bug01_Fibonacci_fib:(forArielGodio_fibonacci_bug01_Fibonacci)->one(java_lang_LongArray+null),
  java_lang_Boolean_FALSE:(ClassFields)->one(java_lang_Boolean),
  java_lang_Boolean_TRUE:(ClassFields)->one(java_lang_Boolean),
  markerFieldToForceAddingInts:JavaPrimitiveIntegerValue,
  java_lang_System_out:(ClassFields)->(java_io_PrintStream),
  java_lang_LongArray_length:(java_lang_LongArray)->one(JavaPrimitiveIntegerValue),
  booleanValue:(java_lang_Boolean)->one(boolean),
  usedObjects:set (java_lang_Object)
] var [

]{
   throw:=null;
   if java_lang_LongArrayCondition3[index,java_lang_LongArray_length,thiz] lblpos if_1 {
      throw:=java_lang_IndexOutOfBoundsExceptionLit
   
   } else {
      java_lang_LongArray_contents:=(java_lang_LongArray_contents)++((thiz)->((thiz.java_lang_LongArray_contents)++((index)->(new_value))))
   
   }
   ;
   skip

}

